// Generated by Framer (0c5492c)
import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    useActiveVariantCallback,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
const enabledGestures = {
    apILwmM6F: {
        hover: true
    },
    wzSVhjBCV: {
        hover: true
    }
};
const cycleOrder = ["apILwmM6F", "Au9RvsF1Z", "wzSVhjBCV"];
const serializationHash = "framer-rlWae";
const variantClassNames = {
    apILwmM6F: "framer-v-w839jh",
    Au9RvsF1Z: "framer-v-vd5ivq",
    wzSVhjBCV: "framer-v-1obyyve"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    bounce: .2,
    delay: 0,
    duration: .4,
    type: "spring"
};
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
    "Closed dark": "wzSVhjBCV",
    Closed: "apILwmM6F",
    Open: "Au9RvsF1Z"
};
const getProps = ({
    click4,
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        variant: humanReadableVariantMap[props.variant] ? ? props.variant ? ? "apILwmM6F",
        yfqhyl4m8: click4 ? ? props.yfqhyl4m8
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        yfqhyl4m8,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        cycleOrder,
        defaultVariant: "apILwmM6F",
        enabledGestures,
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const {
        activeVariantCallback,
        delay
    } = useActiveVariantCallback(baseVariant);
    const onTap17v6dfa = activeVariantCallback(async (...args) => {
        setGestureState({
            isPressed: false
        });
        if (yfqhyl4m8) {
            const res = await yfqhyl4m8(...args);
            if (res === false) return false;
        }
    });
    const sharedStyleClassNames = [];
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsx(motion.div, { ...restProps,
                    ...gestureHandlers,
                    className: cx(scopingClassNames, "framer-w839jh", className, classNames),
                    "data-framer-name": "Closed",
                    "data-highlight": true,
                    layoutDependency: layoutDependency,
                    layoutId: "apILwmM6F",
                    onTap: onTap17v6dfa,
                    ref: refBinding,
                    style: { ...style
                    },
                    ...addPropertyOverrides({
                        "apILwmM6F-hover": {
                            "data-framer-name": undefined
                        },
                        "wzSVhjBCV-hover": {
                            "data-framer-name": undefined
                        },
                        Au9RvsF1Z: {
                            "data-framer-name": "Open"
                        },
                        wzSVhjBCV: {
                            "data-framer-name": "Closed dark"
                        }
                    }, baseVariant, gestureVariant),
                    children: /*#__PURE__*/ _jsxs(motion.div, {
                        className: "framer-ui23e",
                        "data-framer-name": "icon",
                        layoutDependency: layoutDependency,
                        layoutId: "zh26WhFxo",
                        children: [ /*#__PURE__*/ _jsx(motion.div, {
                            className: "framer-6mphdj",
                            layoutDependency: layoutDependency,
                            layoutId: "s9JadZ_o1",
                            style: {
                                backgroundColor: "rgb(255, 255, 255)",
                                borderBottomLeftRadius: 1,
                                borderBottomRightRadius: 1,
                                borderTopLeftRadius: 1,
                                borderTopRightRadius: 1,
                                rotate: 0
                            },
                            variants: {
                                "apILwmM6F-hover": {
                                    rotate: 0
                                },
                                Au9RvsF1Z: {
                                    rotate: -45
                                },
                                wzSVhjBCV: {
                                    backgroundColor: "var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0))",
                                    rotate: 0
                                }
                            }
                        }), /*#__PURE__*/ _jsx(motion.div, {
                            className: "framer-4xye1e",
                            layoutDependency: layoutDependency,
                            layoutId: "S5dudeTLE",
                            style: {
                                backgroundColor: "rgb(255, 255, 255)",
                                borderBottomLeftRadius: 1,
                                borderBottomRightRadius: 1,
                                borderTopLeftRadius: 1,
                                borderTopRightRadius: 1,
                                rotate: 0
                            },
                            variants: {
                                "apILwmM6F-hover": {
                                    rotate: 0
                                },
                                Au9RvsF1Z: {
                                    rotate: -135
                                },
                                wzSVhjBCV: {
                                    backgroundColor: "var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0))",
                                    rotate: 0
                                }
                            }
                        })]
                    })
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-rlWae.framer-ltl5iu, .framer-rlWae .framer-ltl5iu { display: block; }", ".framer-rlWae.framer-w839jh { align-content: flex-end; align-items: flex-end; cursor: pointer; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 4px; height: 12px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-rlWae .framer-ui23e { align-content: flex-end; align-items: flex-end; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 7px; height: 12px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 30px; }", ".framer-rlWae .framer-6mphdj, .framer-rlWae .framer-4xye1e { flex: none; height: 2px; overflow: visible; position: relative; width: 28px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-rlWae.framer-w839jh, .framer-rlWae .framer-ui23e { gap: 0px; } .framer-rlWae.framer-w839jh > * { margin: 0px; margin-bottom: calc(4px / 2); margin-top: calc(4px / 2); } .framer-rlWae.framer-w839jh > :first-child, .framer-rlWae .framer-ui23e > :first-child { margin-top: 0px; } .framer-rlWae.framer-w839jh > :last-child, .framer-rlWae .framer-ui23e > :last-child { margin-bottom: 0px; } .framer-rlWae .framer-ui23e > * { margin: 0px; margin-bottom: calc(7px / 2); margin-top: calc(7px / 2); } }", ".framer-rlWae.framer-v-vd5ivq.framer-w839jh, .framer-rlWae.framer-v-vd5ivq .framer-ui23e { height: 22px; }", ".framer-rlWae.framer-v-vd5ivq .framer-6mphdj { left: calc(50.00000000000002% - 28px / 2); order: 0; position: absolute; top: 10px; z-index: 1; }", ".framer-rlWae.framer-v-vd5ivq .framer-4xye1e { left: calc(50.00000000000002% - 28px / 2); order: 1; position: absolute; top: 10px; z-index: 1; }", ".framer-rlWae.framer-v-1obyyve .framer-6mphdj { order: 1; }", ".framer-rlWae.framer-v-1obyyve .framer-4xye1e { order: 0; }", ".framer-rlWae.framer-v-w839jh.hover .framer-4xye1e, .framer-rlWae.framer-v-1obyyve.hover .framer-6mphdj { width: 16px; }"];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 12
 * @framerIntrinsicWidth 30
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","fixed"]},"Au9RvsF1Z":{"layout":["auto","fixed"]},"wzSVhjBCV":{"layout":["auto","fixed"]},"ADhF4nndE":{"layout":["auto","fixed"]},"rDDYYqtXt":{"layout":["auto","fixed"]}}}
 * @framerVariables {"yfqhyl4m8":"click4"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerVvvFLVand = withCSS(Component, css, "framer-rlWae");
export default FramerVvvFLVand;
FramerVvvFLVand.displayName = "Hamburger icon";
FramerVvvFLVand.defaultProps = {
    height: 12,
    width: 30
};
addPropertyControls(FramerVvvFLVand, {
    variant: {
        options: ["apILwmM6F", "Au9RvsF1Z", "wzSVhjBCV"],
        optionTitles: ["Closed", "Open", "Closed dark"],
        title: "Variant",
        type: ControlType.Enum
    },
    yfqhyl4m8: {
        title: "Click 4",
        type: ControlType.EventHandler
    }
});
addFonts(FramerVvvFLVand, [{
    explicitInter: true,
    fonts: []
}], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "default": {
            "type": "reactComponent",
            "name": "FramerVvvFLVand",
            "slots": [],
            "annotations": {
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"auto\",\"fixed\"]},\"Au9RvsF1Z\":{\"layout\":[\"auto\",\"fixed\"]},\"wzSVhjBCV\":{\"layout\":[\"auto\",\"fixed\"]},\"ADhF4nndE\":{\"layout\":[\"auto\",\"fixed\"]},\"rDDYYqtXt\":{\"layout\":[\"auto\",\"fixed\"]}}}",
                "framerColorSyntax": "true",
                "framerIntrinsicWidth": "30",
                "framerIntrinsicHeight": "12",
                "framerVariables": "{\"yfqhyl4m8\":\"click4\"}",
                "framerComponentViewportWidth": "true",
                "framerContractVersion": "1",
                "framerDisplayContentsDiv": "false",
                "framerAutoSizeImages": "true",
                "framerImmutableVariables": "true"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}
//# sourceMappingURL=./VvvFLVand.map